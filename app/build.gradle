plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "ca.bc.gov.vaxcheck"
        minSdk 27
        targetSdk 31
        versionCode 20
        versionName "1.0.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {

        dev {
            dimension "version"
            versionNameSuffix "-dev"
            resValue "string", "issuer_url", "https://phsasmarthealthcard-dev.azurewebsites.net/v1/trusted/.well-known/issuers.json"
            resValue "string", "rules_url", "https://ds9mwekyyprcy.cloudfront.net/yk-rules.json"
        }

        stage {
            dimension "version"
            versionNameSuffix "-stage"
            resValue "string", "issuer_url", "https://phsasmarthealthcard-dev.azurewebsites.net/v1/trusted/.well-known/issuers.json"
            resValue "string", "rules_url", "https://phsasmarthealthcard-dev.azurewebsites.net/v1/Covid19Proof/.well-known/rules.json"
        }

        prod {
            dimension "version"
            resValue "string", "issuer_url", "https://smarthealthcard.phsa.ca/v1/trusted/.well-known/issuers.json"
            resValue "string", "rules_url", "https://smarthealthcard.phsa.ca/v1/Covid19Proof/.well-known/rules.json"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$versions.core_ktx"

    implementation "androidx.appcompat:appcompat:$versions.appcompat"

    implementation "com.google.android.material:material:$versions.material"

    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipe_refresh_layout"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"

    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    implementation "androidx.navigation:navigation-runtime-ktx:$versions.navigation"

    //JatPack LiveData ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.viewmodel"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.livedata"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"

    //PLAY CORE
    implementation 'com.google.android.play:core:1.10.2'

    //GSOn
    implementation "com.google.code.gson:gson:$versions.gson"

    //Dagger Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    implementation project(path: ':shcDecoder')

    //Google BarcodeScanner
    //TODO:- we may replace it with dynamic model download library
    //implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:16.2.1'
    implementation "com.google.mlkit:barcode-scanning:$versions.barcode_scanning"

    //Camerax
    //TODO: decide on usage of lifecycle, view and extensions lib
    implementation "androidx.camera:camera-camera2:${versions.camerax}"

    implementation "androidx.camera:camera-lifecycle:${versions.camerax}"

    implementation "androidx.camera:camera-view:$versions.camerax_view"

    implementation "androidx.camera:camera-extensions:$versions.camerax_extensions"


    testImplementation "junit:junit:$versions.junit"

    androidTestImplementation "androidx.test.ext:junit:$versions.ext_junit"

    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"

    //Dagger Hilt
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hilt"

    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$versions.hilt"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:$versions.datastore"
}